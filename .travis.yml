language: rust
rust: nightly
cache: cargo
install: cargo build --verbose
script: cargo build --verbose; cargo test --verbose

# heroku deploy
before_deploy:
  - rm -rf target/debug
  - cargo build --verbose --release

deploy:
  skip_cleanup: true
  - provider: heroku
    api_key:
      secure: $HEROKU_API_KEY
    app:
      develop: pockets-for-me-api-staging
      master: pockets-for-me-api
notifications:
email: false

# for codecov
sudo: false
env:
  global:
  - RUSTFLAGS="-C link-dead-code"
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
after_success: |
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  for file in target/debug/pockets-for-me-api-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"
